Initial commit

# To create a database 
CREATE DATABASE SHOP

# Create a table : Salespeople 
CREATE TABLE Salespeople(
SNUM INT PRIMARY KEY,
SNAME VARCHAR(20) NOT NULL,
CITY VARCHAR(20) NOT NULL,
COMM INT NOT NULL
);

#Inserting data in salespeople
INSERT INTO salespeople(snum,sname,city,comm) VALUES
(1001,'Peel','London',12),
(1002,'Serres','SanJose',13),
(1004,'Motika','London',11),
(1007,'Rifkin','Barcelona',15),
(1003,'AxelRod','New York',10),
(1008,'Fran','London',25);

# Create a table : customers
CREATE TABLE customers(
CNUM INT PRIMARY KEY,
CNAME VARCHAR(20) NOT NULL,
CITY VARCHAR(20) NOT NULL,
RATING INT NOT NULL,
SNUM INT NOT NULL,
FOREIGN KEY(SNUM)
REFERENCES salespeople(SNUM)
);

#Inserting data in customers
INSERT INTO customers (CNUM,CNAME,CITY,RATING,SNUM) VALUES 
(2001,'Hoffman','London',100,1001),
(2002,'Giovanni','Rome',200,1003),
(2003,'Liu','SanJose',200,1002),
(2004,'Grass','Berlin',300,1002),
(2006,'Clemens','London',100,1001),
(2008,'Cisneros','SanJose',300,1007),
(2007,'Pereira','Rome',100,1004);

# Create a table : orders
CREATE TABLE orders(
ONUM INT PRIMARY KEY,
AMT NUMERIC(8,2) NOT NULL,
ODATE DATE NOT NULL,
CNUM INT NOT NULL,
SNUM INT NOT NULL,
FOREIGN KEY(CNUM)
REFERENCES customers(CNUM),
FOREIGN KEY(SNUM)
REFERENCES salespeople(SNUM)
);

#Inserting data in orders
INSERT INTO orders (ONUM,AMT,ODATE,CNUM,SNUM) VALUES
 (3001,18.69,'1990-03-10',2008,1007),
 (3003,767.19,'1990-03-10',2001,1001),
 (3002,1900.10,'1990-03-10',2007,1004),
 (3005,5160.45,'1990-03-10',2003,1002),
 (3006,1098.16,'1990-03-10',2008,1007),
 (3009,1713.23,'1990-04-10',2002,1003),
 (3007,75.75,'1990-04-10',2004,1002),
 (3008,4723.00,'1990-05-10',2006,1001),
 (3010,1309.95,'1990-06-10',2004,1002),
 (3011,9891.88,'1990-06-10',2006,1001);
 
 
 *********************************************************QUERIES********************************************
 
 
 1) List all the columns of the Salespeople table.
 
 SELECT * FROM salespeople;

 snum |  sname  |   city    | comm 
------+---------+-----------+------
 1001 | Peel    | London    |   12
 1002 | Serres  | SanJose   |   13
 1004 | Motika  | London    |   11
 1007 | Rifkin  | Barcelona |   15
 1003 | AxelRod | New York  |   10
 1008 | Fran    | London    |   25
 
 2) List all customers with a rating of 100.
 
 SELECT * FROM customers WHERE rating = 100;
 
 cnum |  cname  |  city  | rating | snum 
------+---------+--------+--------+------
 2001 | Hoffman | London |    100 | 1001
 2006 | Clemens | London |    100 | 1001
 2007 | Pereira | Rome   |    100 | 1004
 
 3) Find the largest order taken by each salesperson on each date.
 
 SELECT snum,MAX(amt),odate FROM orders GROUP BY snum,odate ORDER BY snum,MAX(amt);
 
 snum |   max   |   odate    
------+---------+------------
 1001 |  767.19 | 1990-03-10
 1001 | 4723.00 | 1990-05-10
 1001 | 9891.88 | 1990-06-10
 1002 |   75.75 | 1990-04-10
 1002 | 1309.95 | 1990-06-10
 1002 | 5160.45 | 1990-03-10
 1003 | 1713.23 | 1990-04-10
 1004 | 1900.10 | 1990-03-10
 1007 | 1098.16 | 1990-03-10
 
 4) Arrange the Order table by descending customer number.
 
 SELECT * FROM orders ORDER BY cnum DESC;
 
 onum |   amt   |   odate    | cnum | snum 
------+---------+------------+------+------
 3006 | 1098.16 | 1990-03-10 | 2008 | 1007
 3001 |   18.69 | 1990-03-10 | 2008 | 1007
 3002 | 1900.10 | 1990-03-10 | 2007 | 1004
 3011 | 9891.88 | 1990-06-10 | 2006 | 1001
 3008 | 4723.00 | 1990-05-10 | 2006 | 1001
 3007 |   75.75 | 1990-04-10 | 2004 | 1002
 3010 | 1309.95 | 1990-06-10 | 2004 | 1002
 3005 | 5160.45 | 1990-03-10 | 2003 | 1002
 3009 | 1713.23 | 1990-04-10 | 2002 | 1003
 3003 |  767.19 | 1990-03-10 | 2001 | 1001
 
 5) Find which salespeople currently have orders in the order table.
 
 SELECT DISTINCT(s.snum),s.sname 
 FROM salespeople s
 INNER JOIN orders ON orders.snum = s.snum ORDER BY s.snum;
 
 snum |  sname  
------+---------
 1001 | Peel
 1002 | Serres
 1003 | AxelRod
 1004 | Motika
 1007 | Rifkin
 
 6) List names of all customers matched with the salespeople serving them.
 
 SELECT customers.cnum,customers.cname, salespeople.sname
 FROM customers
 INNER JOIN salespeople
 ON customers.snum =  salespeople.snum ORDER BY customers.cnum;
 
 cnum |  cname   |  sname  
------+----------+---------
 2001 | Hoffman  | Peel
 2002 | Giovanni | AxelRod
 2003 | Liu      | Serres
 2004 | Grass    | Serres
 2006 | Clemens  | Peel
 2007 | Pereira  | Motika
 2008 | Cisneros | Rifkin
 
 7) Find the names and numbers of all salespeople who have more than one customer.
 
 SELECT s.SNUM, s.SNAME 
 FROM salespeople s 
 WHERE  1 < (SELECT COUNT(*) 
            FROM customers c
            WHERE s.SNUM=c.SNUM);
            
 snum | sname  
------+--------
 1001 | Peel
 1002 | Serres
 
 8) Count the orders of each of the salespeople and output the results in descending order.
 
 SELECT salespeople.snum,COUNT(ONUM) FROM salespeople,orders WHERE salespeople.snum = orders.snum GROUP BY  salespeople.snum ORDER BY COUNT(ONUM) DESC ;
 
 snum | count 
------+-------
 1002 |     3
 1001 |     3
 1007 |     2
 1003 |     1
 1004 |     1
 
 9) List the customer table if and only if one or more of the customers in the Customer table are located in SanJose.
 
 SELECT * FROM customers WHERE EXISTS ( SELECT * FROM customers WHERE city = 'SanJose' );
 
 cnum |  cname   |  city   | rating | snum 
------+----------+---------+--------+------
 2001 | Hoffman  | London  |    100 | 1001
 2002 | Giovanni | Rome    |    200 | 1003
 2003 | Liu      | SanJose |    200 | 1002
 2004 | Grass    | Berlin  |    300 | 1002
 2006 | Clemens  | London  |    100 | 1001
 2008 | Cisneros | SanJose |    300 | 1007
 2007 | Pereira  | Rome    |    100 | 1004
 
 10) Match salespeople to customers according to what city they live in.
 
 SELECT salespeople.sname, customers.cname, salespeople.city
 FROM salespeople
 INNER JOIN customers
 ON customers.city = salespeople.city;
 
 sname  |  cname   |  city   
--------+----------+---------
 Peel   | Clemens  | London
 Peel   | Hoffman  | London
 Serres | Cisneros | SanJose
 Serres | Liu      | SanJose
 Motika | Clemens  | London
 Motika | Hoffman  | London
 Fran   | Clemens  | London
 Fran   | Hoffman  | London
 
 11) Find all the customers in SanJose who have a rating above 200.
 
 SELECT cnum,cname,rating,city FROM customers WHERE city = 'SanJose' AND rating > 200 ;
 
 cnum |  cname   | rating |  city   
------+----------+--------+---------
 2008 | Cisneros |    300 | SanJose
 
 12) List the names and commissions of all salespeople in London.
 
 SELECT sname,comm FROM salespeople WHERE city = 'London';
 
 sname  | comm 
--------+------
 Peel   |   12
 Motika |   11
 Fran   |   25
 
 13) List all the orders of Salesperson Motika from the orders table.
 
 SELECT * FROM orders WHERE snum = ( SELECT snum FROM salespeople WHERE sname = 'Motika' );
 
 onum |   amt   |   odate    | cnum | snum 
------+---------+------------+------+------
 3002 | 1900.10 | 1990-03-10 | 2007 | 1004
 
 





 
 
 
